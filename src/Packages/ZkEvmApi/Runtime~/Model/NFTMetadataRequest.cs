/*
 * Immutable zkEVM API
 *
 * Immutable Multi Rollup API
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@immutable.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using OpenAPIDateConverter = Immutable.Api.ZkEvm.Client.OpenAPIDateConverter;

namespace Immutable.Api.ZkEvm.Model
{
    /// <summary>
    /// The NFT metadata. Total size of this object should not exceed 16 KiB
    /// </summary>
    [DataContract(Name = "NFTMetadataRequest")]
    public partial class NFTMetadataRequest
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="NFTMetadataRequest" /> class.
        /// </summary>
        /// <param name="name">The name of the NFT.</param>
        /// <param name="description">The description of the NFT.</param>
        /// <param name="image">The image url of the NFT.</param>
        /// <param name="externalUrl">The external link of the NFT.</param>
        /// <param name="animationUrl">The animation url of the NFT.</param>
        /// <param name="youtubeUrl">The youtube link of the NFT.</param>
        /// <param name="attributes">List of Metadata attributes.</param>
        public NFTMetadataRequest(string name = default(string), string description = default(string), string image = default(string), string externalUrl = default(string), string animationUrl = default(string), string youtubeUrl = default(string), List<NFTMetadataAttribute> attributes = default(List<NFTMetadataAttribute>))
        {
            this.Name = name;
            this.Description = description;
            this.Image = image;
            this.ExternalUrl = externalUrl;
            this.AnimationUrl = animationUrl;
            this.YoutubeUrl = youtubeUrl;
            this.Attributes = attributes;
        }

        /// <summary>
        /// The name of the NFT
        /// </summary>
        /// <value>The name of the NFT</value>
        /// <example>Sword</example>
        [DataMember(Name = "name", EmitDefaultValue = true)]
        public string Name { get; set; }

        /// <summary>
        /// The description of the NFT
        /// </summary>
        /// <value>The description of the NFT</value>
        /// <example>2022-08-16T17:43:26.991388Z</example>
        [DataMember(Name = "description", EmitDefaultValue = true)]
        public string Description { get; set; }

        /// <summary>
        /// The image url of the NFT
        /// </summary>
        /// <value>The image url of the NFT</value>
        /// <example>https://some-url</example>
        [DataMember(Name = "image", EmitDefaultValue = true)]
        public string Image { get; set; }

        /// <summary>
        /// The external link of the NFT
        /// </summary>
        /// <value>The external link of the NFT</value>
        /// <example>https://some-url</example>
        [DataMember(Name = "external_url", EmitDefaultValue = true)]
        public string ExternalUrl { get; set; }

        /// <summary>
        /// The animation url of the NFT
        /// </summary>
        /// <value>The animation url of the NFT</value>
        /// <example>https://some-url</example>
        [DataMember(Name = "animation_url", EmitDefaultValue = true)]
        public string AnimationUrl { get; set; }

        /// <summary>
        /// The youtube link of the NFT
        /// </summary>
        /// <value>The youtube link of the NFT</value>
        /// <example>https://some-url</example>
        [DataMember(Name = "youtube_url", EmitDefaultValue = true)]
        public string YoutubeUrl { get; set; }

        /// <summary>
        /// List of Metadata attributes
        /// </summary>
        /// <value>List of Metadata attributes</value>
        [DataMember(Name = "attributes", EmitDefaultValue = true)]
        public List<NFTMetadataAttribute> Attributes { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class NFTMetadataRequest {\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  Description: ").Append(Description).Append("\n");
            sb.Append("  Image: ").Append(Image).Append("\n");
            sb.Append("  ExternalUrl: ").Append(ExternalUrl).Append("\n");
            sb.Append("  AnimationUrl: ").Append(AnimationUrl).Append("\n");
            sb.Append("  YoutubeUrl: ").Append(YoutubeUrl).Append("\n");
            sb.Append("  Attributes: ").Append(Attributes).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

    }

}
