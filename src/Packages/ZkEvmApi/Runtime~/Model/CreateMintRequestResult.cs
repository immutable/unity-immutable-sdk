/*
 * Immutable zkEVM API
 *
 * Immutable Multi Rollup API
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@immutable.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using OpenAPIDateConverter = Immutable.Api.ZkEvm.Client.OpenAPIDateConverter;

namespace Immutable.Api.ZkEvm.Model
{
    /// <summary>
    /// CreateMintRequestResult
    /// </summary>
    [DataContract(Name = "CreateMintRequestResult")]
    public partial class CreateMintRequestResult
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="CreateMintRequestResult" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected CreateMintRequestResult() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="CreateMintRequestResult" /> class.
        /// </summary>
        /// <param name="imxMintRequestsLimit">imxMintRequestsLimit (required).</param>
        /// <param name="imxMintRequestsLimitReset">imxMintRequestsLimitReset (required).</param>
        /// <param name="imxRemainingMintRequests">imxRemainingMintRequests (required).</param>
        /// <param name="imxMintRequestsRetryAfter">imxMintRequestsRetryAfter (required).</param>
        public CreateMintRequestResult(string imxMintRequestsLimit = default(string), string imxMintRequestsLimitReset = default(string), string imxRemainingMintRequests = default(string), string imxMintRequestsRetryAfter = default(string))
        {
            // to ensure "imxMintRequestsLimit" is required (not null)
            if (imxMintRequestsLimit == null)
            {
                throw new ArgumentNullException("imxMintRequestsLimit is a required property for CreateMintRequestResult and cannot be null");
            }
            this.ImxMintRequestsLimit = imxMintRequestsLimit;
            // to ensure "imxMintRequestsLimitReset" is required (not null)
            if (imxMintRequestsLimitReset == null)
            {
                throw new ArgumentNullException("imxMintRequestsLimitReset is a required property for CreateMintRequestResult and cannot be null");
            }
            this.ImxMintRequestsLimitReset = imxMintRequestsLimitReset;
            // to ensure "imxRemainingMintRequests" is required (not null)
            if (imxRemainingMintRequests == null)
            {
                throw new ArgumentNullException("imxRemainingMintRequests is a required property for CreateMintRequestResult and cannot be null");
            }
            this.ImxRemainingMintRequests = imxRemainingMintRequests;
            // to ensure "imxMintRequestsRetryAfter" is required (not null)
            if (imxMintRequestsRetryAfter == null)
            {
                throw new ArgumentNullException("imxMintRequestsRetryAfter is a required property for CreateMintRequestResult and cannot be null");
            }
            this.ImxMintRequestsRetryAfter = imxMintRequestsRetryAfter;
        }

        /// <summary>
        /// Gets or Sets ImxMintRequestsLimit
        /// </summary>
        [DataMember(Name = "imx_mint_requests_limit", IsRequired = true, EmitDefaultValue = true)]
        public string ImxMintRequestsLimit { get; set; }

        /// <summary>
        /// Gets or Sets ImxMintRequestsLimitReset
        /// </summary>
        [DataMember(Name = "imx_mint_requests_limit_reset", IsRequired = true, EmitDefaultValue = true)]
        public string ImxMintRequestsLimitReset { get; set; }

        /// <summary>
        /// Gets or Sets ImxRemainingMintRequests
        /// </summary>
        [DataMember(Name = "imx_remaining_mint_requests", IsRequired = true, EmitDefaultValue = true)]
        public string ImxRemainingMintRequests { get; set; }

        /// <summary>
        /// Gets or Sets ImxMintRequestsRetryAfter
        /// </summary>
        [DataMember(Name = "imx_mint_requests_retry_after", IsRequired = true, EmitDefaultValue = true)]
        public string ImxMintRequestsRetryAfter { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class CreateMintRequestResult {\n");
            sb.Append("  ImxMintRequestsLimit: ").Append(ImxMintRequestsLimit).Append("\n");
            sb.Append("  ImxMintRequestsLimitReset: ").Append(ImxMintRequestsLimitReset).Append("\n");
            sb.Append("  ImxRemainingMintRequests: ").Append(ImxRemainingMintRequests).Append("\n");
            sb.Append("  ImxMintRequestsRetryAfter: ").Append(ImxMintRequestsRetryAfter).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

    }

}
