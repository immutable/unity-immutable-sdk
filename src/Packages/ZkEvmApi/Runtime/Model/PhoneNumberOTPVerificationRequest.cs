/*
 * Immutable zkEVM API
 *
 * Immutable Multi Rollup API
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@immutable.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using OpenAPIDateConverter = Immutable.Api.ZkEvm.Client.OpenAPIDateConverter;

namespace Immutable.Api.ZkEvm.Model
{
    /// <summary>
    /// Phone number OTP verification request
    /// </summary>
    [DataContract(Name = "PhoneNumberOTPVerificationRequest")]
    public partial class PhoneNumberOTPVerificationRequest
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="PhoneNumberOTPVerificationRequest" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected PhoneNumberOTPVerificationRequest() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="PhoneNumberOTPVerificationRequest" /> class.
        /// </summary>
        /// <param name="phoneNumber">Phone number (required).</param>
        /// <param name="code">Phone number verification OTP (required).</param>
        public PhoneNumberOTPVerificationRequest(string phoneNumber = default(string), string code = default(string))
        {
            // to ensure "phoneNumber" is required (not null)
            if (phoneNumber == null)
            {
                throw new ArgumentNullException("phoneNumber is a required property for PhoneNumberOTPVerificationRequest and cannot be null");
            }
            this.PhoneNumber = phoneNumber;
            // to ensure "code" is required (not null)
            if (code == null)
            {
                throw new ArgumentNullException("code is a required property for PhoneNumberOTPVerificationRequest and cannot be null");
            }
            this.Code = code;
        }

        /// <summary>
        /// Phone number
        /// </summary>
        /// <value>Phone number</value>
        /// <example>+61412345678</example>
        [DataMember(Name = "phone_number", IsRequired = true, EmitDefaultValue = true)]
        public string PhoneNumber { get; set; }

        /// <summary>
        /// Phone number verification OTP
        /// </summary>
        /// <value>Phone number verification OTP</value>
        /// <example>123456</example>
        [DataMember(Name = "code", IsRequired = true, EmitDefaultValue = true)]
        public string Code { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class PhoneNumberOTPVerificationRequest {\n");
            sb.Append("  PhoneNumber: ").Append(PhoneNumber).Append("\n");
            sb.Append("  Code: ").Append(Code).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

    }

}
