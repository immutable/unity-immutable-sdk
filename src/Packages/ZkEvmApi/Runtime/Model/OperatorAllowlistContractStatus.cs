/*
 * Immutable zkEVM API
 *
 * Immutable Multi Rollup API
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@immutable.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using OpenAPIDateConverter = Immutable.Api.ZkEvm.Client.OpenAPIDateConverter;

namespace Immutable.Api.ZkEvm.Model
{
    /// <summary>
    /// OperatorAllowlistContractStatus
    /// </summary>
    [DataContract(Name = "OperatorAllowlistContractStatus")]
    public partial class OperatorAllowlistContractStatus
    {

        /// <summary>
        /// Gets or Sets Status
        /// </summary>
        [DataMember(Name = "status", IsRequired = true, EmitDefaultValue = true)]
        public OperatorAllowlistStatus Status { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="OperatorAllowlistContractStatus" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected OperatorAllowlistContractStatus() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="OperatorAllowlistContractStatus" /> class.
        /// </summary>
        /// <param name="chain">chain (required).</param>
        /// <param name="contractAddress">The address of the contract (required).</param>
        /// <param name="status">status (required).</param>
        /// <param name="details">details (required).</param>
        /// <param name="createdAt">When the contract status was created (required).</param>
        /// <param name="createdBy">Who created the status (required).</param>
        public OperatorAllowlistContractStatus(Chain chain = default(Chain), string contractAddress = default(string), OperatorAllowlistStatus status = default(OperatorAllowlistStatus), OperatorAllowlistStatusDetails details = default(OperatorAllowlistStatusDetails), DateTime createdAt = default(DateTime), string createdBy = default(string))
        {
            // to ensure "chain" is required (not null)
            if (chain == null)
            {
                throw new ArgumentNullException("chain is a required property for OperatorAllowlistContractStatus and cannot be null");
            }
            this.Chain = chain;
            // to ensure "contractAddress" is required (not null)
            if (contractAddress == null)
            {
                throw new ArgumentNullException("contractAddress is a required property for OperatorAllowlistContractStatus and cannot be null");
            }
            this.ContractAddress = contractAddress;
            this.Status = status;
            // to ensure "details" is required (not null)
            if (details == null)
            {
                throw new ArgumentNullException("details is a required property for OperatorAllowlistContractStatus and cannot be null");
            }
            this.Details = details;
            this.CreatedAt = createdAt;
            // to ensure "createdBy" is required (not null)
            if (createdBy == null)
            {
                throw new ArgumentNullException("createdBy is a required property for OperatorAllowlistContractStatus and cannot be null");
            }
            this.CreatedBy = createdBy;
        }

        /// <summary>
        /// Gets or Sets Chain
        /// </summary>
        [DataMember(Name = "chain", IsRequired = true, EmitDefaultValue = true)]
        public Chain Chain { get; set; }

        /// <summary>
        /// The address of the contract
        /// </summary>
        /// <value>The address of the contract</value>
        /// <example>0x8a90cab2b38dba80c64b7734e58ee1db38b8992e</example>
        [DataMember(Name = "contract_address", IsRequired = true, EmitDefaultValue = true)]
        public string ContractAddress { get; set; }

        /// <summary>
        /// Gets or Sets Details
        /// </summary>
        [DataMember(Name = "details", IsRequired = true, EmitDefaultValue = true)]
        public OperatorAllowlistStatusDetails Details { get; set; }

        /// <summary>
        /// When the contract status was created
        /// </summary>
        /// <value>When the contract status was created</value>
        /// <example>2022-08-16T17:43:26.991388Z</example>
        [DataMember(Name = "created_at", IsRequired = true, EmitDefaultValue = true)]
        public DateTime CreatedAt { get; set; }

        /// <summary>
        /// Who created the status
        /// </summary>
        /// <value>Who created the status</value>
        /// <example>user@immutable.com</example>
        [DataMember(Name = "created_by", IsRequired = true, EmitDefaultValue = true)]
        public string CreatedBy { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class OperatorAllowlistContractStatus {\n");
            sb.Append("  Chain: ").Append(Chain).Append("\n");
            sb.Append("  ContractAddress: ").Append(ContractAddress).Append("\n");
            sb.Append("  Status: ").Append(Status).Append("\n");
            sb.Append("  Details: ").Append(Details).Append("\n");
            sb.Append("  CreatedAt: ").Append(CreatedAt).Append("\n");
            sb.Append("  CreatedBy: ").Append(CreatedBy).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

    }

}
