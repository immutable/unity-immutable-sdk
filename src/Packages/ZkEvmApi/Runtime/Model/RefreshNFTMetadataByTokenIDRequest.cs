/*
 * Immutable zkEVM API
 *
 * Immutable Multi Rollup API
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@immutable.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using OpenAPIDateConverter = Immutable.Api.ZkEvm.Client.OpenAPIDateConverter;

namespace Immutable.Api.ZkEvm.Model
{
    /// <summary>
    /// RefreshNFTMetadataByTokenIDRequest
    /// </summary>
    [DataContract(Name = "RefreshNFTMetadataByTokenIDRequest")]
    public partial class RefreshNFTMetadataByTokenIDRequest
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="RefreshNFTMetadataByTokenIDRequest" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected RefreshNFTMetadataByTokenIDRequest() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="RefreshNFTMetadataByTokenIDRequest" /> class.
        /// </summary>
        /// <param name="nftMetadata">List of nft metadata to be refreshed. Total size of the list should not exceed 228 KiB (required).</param>
        public RefreshNFTMetadataByTokenIDRequest(List<RefreshMetadataByTokenID> nftMetadata = default(List<RefreshMetadataByTokenID>))
        {
            // to ensure "nftMetadata" is required (not null)
            if (nftMetadata == null)
            {
                throw new ArgumentNullException("nftMetadata is a required property for RefreshNFTMetadataByTokenIDRequest and cannot be null");
            }
            this.NftMetadata = nftMetadata;
        }

        /// <summary>
        /// List of nft metadata to be refreshed. Total size of the list should not exceed 228 KiB
        /// </summary>
        /// <value>List of nft metadata to be refreshed. Total size of the list should not exceed 228 KiB</value>
        [DataMember(Name = "nft_metadata", IsRequired = true, EmitDefaultValue = true)]
        public List<RefreshMetadataByTokenID> NftMetadata { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class RefreshNFTMetadataByTokenIDRequest {\n");
            sb.Append("  NftMetadata: ").Append(NftMetadata).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

    }

}
